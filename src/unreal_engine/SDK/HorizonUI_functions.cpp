#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HorizonUI

#include "Basic.hpp"

#include "HorizonUI_classes.hpp"
#include "HorizonUI_parameters.hpp"


namespace SDK
{

// Function HorizonUI.HorizonFileSystem.DestroyInstance
// (Final, Native, Static, Public, BlueprintCallable)

void UHorizonFileSystem::DestroyInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HorizonFileSystem", "DestroyInstance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonFileSystem.GetInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UHorizonFileSystem*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHorizonFileSystem* UHorizonFileSystem::GetInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HorizonFileSystem", "GetInstance");

	Params::HorizonFileSystem_GetInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonFileSystem.CreateDirectoryRecursively
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           FolderToMake                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHorizonFileSystem::CreateDirectoryRecursively(const class FString& FolderToMake)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonFileSystem", "CreateDirectoryRecursively");

	Params::HorizonFileSystem_CreateDirectoryRecursively Parms{};

	Parms.FolderToMake = std::move(FolderToMake);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonFileSystem.LoadFont
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PackageFilePath                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFont*                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFont* UHorizonFileSystem::LoadFont(const class FString& PackageFilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonFileSystem", "LoadFont");

	Params::HorizonFileSystem_LoadFont Parms{};

	Parms.PackageFilePath = std::move(PackageFilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonFileSystem.LoadMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PackageFilePath                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterial*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterial* UHorizonFileSystem::LoadMaterial(const class FString& PackageFilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonFileSystem", "LoadMaterial");

	Params::HorizonFileSystem_LoadMaterial Parms{};

	Parms.PackageFilePath = std::move(PackageFilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonFileSystem.LoadPaperFlipbook
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PackageFilePath                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPaperFlipbook*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPaperFlipbook* UHorizonFileSystem::LoadPaperFlipbook(const class FString& PackageFilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonFileSystem", "LoadPaperFlipbook");

	Params::HorizonFileSystem_LoadPaperFlipbook Parms{};

	Parms.PackageFilePath = std::move(PackageFilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonFileSystem.LoadSound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PackageFilePath                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USoundBase* UHorizonFileSystem::LoadSound(const class FString& PackageFilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonFileSystem", "LoadSound");

	Params::HorizonFileSystem_LoadSound Parms{};

	Parms.PackageFilePath = std::move(PackageFilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonFileSystem.LoadTexture2D
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           PackageFilePath                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutWidth                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutHeight                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UHorizonFileSystem::LoadTexture2D(const class FString& PackageFilePath, int32* OutWidth, int32* OutHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonFileSystem", "LoadTexture2D");

	Params::HorizonFileSystem_LoadTexture2D Parms{};

	Parms.PackageFilePath = std::move(PackageFilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWidth != nullptr)
		*OutWidth = Parms.OutWidth;

	if (OutHeight != nullptr)
		*OutHeight = Parms.OutHeight;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonFileSystem.LoadUAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PackageFilePath                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UHorizonFileSystem::LoadUAsset(const class FString& PackageFilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonFileSystem", "LoadUAsset");

	Params::HorizonFileSystem_LoadUAsset Parms{};

	Parms.PackageFilePath = std::move(PackageFilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonButton.OnClickedButton
// (Native, Protected)

void UHorizonButton::OnClickedButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButton", "OnClickedButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction HorizonUI.HorizonButton.OnHorizonButtonEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UHorizonButton*                   Button                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHorizonButton::OnHorizonButtonEvent__DelegateSignature(class UHorizonButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButton", "OnHorizonButtonEvent__DelegateSignature");

	Params::HorizonButton_OnHorizonButtonEvent__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HorizonUI.HorizonButton.OnHoveredButton
// (Native, Protected)

void UHorizonButton::OnHoveredButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButton", "OnHoveredButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonButton.OnPressedButton
// (Native, Protected)

void UHorizonButton::OnPressedButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButton", "OnPressedButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonButton.OnReleasedButton
// (Native, Protected)

void UHorizonButton::OnReleasedButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButton", "OnReleasedButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonButton.OnUnhoveredButton
// (Native, Protected)

void UHorizonButton::OnUnhoveredButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButton", "OnUnhoveredButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonFlipbookWidget.GetCurrentAnimationDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHorizonFlipbookWidget::GetCurrentAnimationDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonFlipbookWidget", "GetCurrentAnimationDuration");

	Params::HorizonFlipbookWidget_GetCurrentAnimationDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonFlipbookWidget.PauseAnimation
// (Final, Native, Public, BlueprintCallable)

void UHorizonFlipbookWidget::PauseAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonFlipbookWidget", "PauseAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonFlipbookWidget.PlayAnimation
// (Final, Native, Public, BlueprintCallable)

void UHorizonFlipbookWidget::PlayAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonFlipbookWidget", "PlayAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonFlipbookWidget.ResetAnimation
// (Final, Native, Public, BlueprintCallable)

void UHorizonFlipbookWidget::ResetAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonFlipbookWidget", "ResetAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonFlipbookWidget.ResumeAnimation
// (Final, Native, Public, BlueprintCallable)

void UHorizonFlipbookWidget::ResumeAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonFlipbookWidget", "ResumeAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonFlipbookWidget.SetCurrentAnimationDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHorizonFlipbookWidget::SetCurrentAnimationDuration(float InDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonFlipbookWidget", "SetCurrentAnimationDuration");

	Params::HorizonFlipbookWidget_SetCurrentAnimationDuration Parms{};

	Parms.InDuration = InDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonFlipbookWidget.SetFlipbook
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPaperFlipbook*                   InFlipbook                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHorizonFlipbookWidget::SetFlipbook(class UPaperFlipbook* InFlipbook)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonFlipbookWidget", "SetFlipbook");

	Params::HorizonFlipbookWidget_SetFlipbook Parms{};

	Parms.InFlipbook = InFlipbook;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonFlipbookWidget.StopAnimation
// (Final, Native, Public, BlueprintCallable)

void UHorizonFlipbookWidget::StopAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonFlipbookWidget", "StopAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonFlipbookWidget.isEndAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHorizonFlipbookWidget::IsEndAnimation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonFlipbookWidget", "isEndAnimation");

	Params::HorizonFlipbookWidget_IsEndAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonDesignableUserWidget.OnSynchronizeProperties
// (Native, Event, Protected, BlueprintEvent)

void UHorizonDesignableUserWidget::OnSynchronizeProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDesignableUserWidget", "OnSynchronizeProperties");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDesignableUserWidget.SynchronizeProperties
// (Native, Public, BlueprintCallable)

void UHorizonDesignableUserWidget::SynchronizeProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDesignableUserWidget", "SynchronizeProperties");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonButtonUserWidget.NativeOnButtonClicked
// (Native, Protected)

void UHorizonButtonUserWidget::NativeOnButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButtonUserWidget", "NativeOnButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonButtonUserWidget.NativeOnButtonHovered
// (Native, Protected)

void UHorizonButtonUserWidget::NativeOnButtonHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButtonUserWidget", "NativeOnButtonHovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonButtonUserWidget.NativeOnButtonPressed
// (Native, Protected)

void UHorizonButtonUserWidget::NativeOnButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButtonUserWidget", "NativeOnButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonButtonUserWidget.NativeOnButtonReleased
// (Native, Protected)

void UHorizonButtonUserWidget::NativeOnButtonReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButtonUserWidget", "NativeOnButtonReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonButtonUserWidget.NativeOnButtonUnhovered
// (Native, Protected)

void UHorizonButtonUserWidget::NativeOnButtonUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButtonUserWidget", "NativeOnButtonUnhovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction HorizonUI.HorizonButtonUserWidget.OnHorizonButtonEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UHorizonButtonUserWidget*         InButton                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHorizonButtonUserWidget::OnHorizonButtonEvent__DelegateSignature(class UHorizonButtonUserWidget* InButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButtonUserWidget", "OnHorizonButtonEvent__DelegateSignature");

	Params::HorizonButtonUserWidget_OnHorizonButtonEvent__DelegateSignature Parms{};

	Parms.InButton = InButton;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction HorizonUI.HorizonButtonUserWidget.OnHorizonButtonFocusEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class UHorizonButtonUserWidget*         InButton                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHorizonButtonUserWidget::OnHorizonButtonFocusEvent__DelegateSignature(class UHorizonButtonUserWidget* InButton, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButtonUserWidget", "OnHorizonButtonFocusEvent__DelegateSignature");

	Params::HorizonButtonUserWidget_OnHorizonButtonFocusEvent__DelegateSignature Parms{};

	Parms.InButton = InButton;
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HorizonUI.HorizonButtonUserWidget.ReceiveOnButtonClicked
// (Event, Protected, BlueprintEvent)

void UHorizonButtonUserWidget::ReceiveOnButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButtonUserWidget", "ReceiveOnButtonClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HorizonUI.HorizonButtonUserWidget.ReceiveOnButtonFocus
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHorizonButtonUserWidget::ReceiveOnButtonFocus(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButtonUserWidget", "ReceiveOnButtonFocus");

	Params::HorizonButtonUserWidget_ReceiveOnButtonFocus Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HorizonUI.HorizonButtonUserWidget.ReceiveOnButtonHovered
// (Event, Protected, BlueprintEvent)

void UHorizonButtonUserWidget::ReceiveOnButtonHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButtonUserWidget", "ReceiveOnButtonHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HorizonUI.HorizonButtonUserWidget.ReceiveOnButtonPressed
// (Event, Protected, BlueprintEvent)

void UHorizonButtonUserWidget::ReceiveOnButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButtonUserWidget", "ReceiveOnButtonPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HorizonUI.HorizonButtonUserWidget.ReceiveOnButtonReleased
// (Event, Protected, BlueprintEvent)

void UHorizonButtonUserWidget::ReceiveOnButtonReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButtonUserWidget", "ReceiveOnButtonReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HorizonUI.HorizonButtonUserWidget.ReceiveOnButtonUnhovered
// (Event, Protected, BlueprintEvent)

void UHorizonButtonUserWidget::ReceiveOnButtonUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButtonUserWidget", "ReceiveOnButtonUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HorizonUI.HorizonButtonUserWidget.ReceiveOnOnButtonFocusLost
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHorizonButtonUserWidget::ReceiveOnOnButtonFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonButtonUserWidget", "ReceiveOnOnButtonFocusLost");

	Params::HorizonButtonUserWidget_ReceiveOnOnButtonFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.GetCurrentPageIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHorizonDialogueMsgTextBlock::GetCurrentPageIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "GetCurrentPageIndex");

	Params::HorizonDialogueMsgTextBlock_GetCurrentPageIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.GetCurrentPageTextLength
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHorizonDialogueMsgTextBlock::GetCurrentPageTextLength()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "GetCurrentPageTextLength");

	Params::HorizonDialogueMsgTextBlock_GetCurrentPageTextLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.GetPageTextByIndex
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PageIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UHorizonDialogueMsgTextBlock::GetPageTextByIndex(int32 PageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "GetPageTextByIndex");

	Params::HorizonDialogueMsgTextBlock_GetPageTextByIndex Parms{};

	Parms.PageIndex = PageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.GetTextLength
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHorizonDialogueMsgTextBlock::GetTextLength()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "GetTextLength");

	Params::HorizonDialogueMsgTextBlock_GetTextLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.IsDialogueMsgCompleted
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHorizonDialogueMsgTextBlock::IsDialogueMsgCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "IsDialogueMsgCompleted");

	Params::HorizonDialogueMsgTextBlock_IsDialogueMsgCompleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.IsDialogueMsgPageEnd
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHorizonDialogueMsgTextBlock::IsDialogueMsgPageEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "IsDialogueMsgPageEnd");

	Params::HorizonDialogueMsgTextBlock_IsDialogueMsgPageEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.NextDialogueMsgPage
// (Native, Public, BlueprintCallable)

void UHorizonDialogueMsgTextBlock::NextDialogueMsgPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "NextDialogueMsgPage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction HorizonUI.HorizonDialogueMsgTextBlock.OnHorizonDialogueCharAdvancedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// struct FHorizonDialogueBlockInfo        InCurrentBlockInfo                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHorizonDialogueMsgTextBlock::OnHorizonDialogueCharAdvancedEvent__DelegateSignature(const struct FHorizonDialogueBlockInfo& InCurrentBlockInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "OnHorizonDialogueCharAdvancedEvent__DelegateSignature");

	Params::HorizonDialogueMsgTextBlock_OnHorizonDialogueCharAdvancedEvent__DelegateSignature Parms{};

	Parms.InCurrentBlockInfo = std::move(InCurrentBlockInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction HorizonUI.HorizonDialogueMsgTextBlock.OnHorizonDialogueCustomEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class FString                           InEventName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHorizonDialogueSegmentInfo      InSegInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHorizonDialogueMsgTextBlock::OnHorizonDialogueCustomEvent__DelegateSignature(const class FString& InEventName, const struct FHorizonDialogueSegmentInfo& InSegInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "OnHorizonDialogueCustomEvent__DelegateSignature");

	Params::HorizonDialogueMsgTextBlock_OnHorizonDialogueCustomEvent__DelegateSignature Parms{};

	Parms.InEventName = std::move(InEventName);
	Parms.InSegInfo = std::move(InSegInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction HorizonUI.HorizonDialogueMsgTextBlock.OnHorizonDialogueMsgEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UHorizonDialogueMsgTextBlock::OnHorizonDialogueMsgEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "OnHorizonDialogueMsgEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction HorizonUI.HorizonDialogueMsgTextBlock.OnHorizonDialoguePageEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// struct FHorizonDialogueDialoguePageResultInResult                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHorizonDialogueMsgTextBlock::OnHorizonDialoguePageEvent__DelegateSignature(const struct FHorizonDialogueDialoguePageResult& InResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "OnHorizonDialoguePageEvent__DelegateSignature");

	Params::HorizonDialogueMsgTextBlock_OnHorizonDialoguePageEvent__DelegateSignature Parms{};

	Parms.InResult = std::move(InResult);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction HorizonUI.HorizonDialogueMsgTextBlock.OnHorizonHypertextEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// struct FHorizonDialogueHypertextResult  InResult                                               (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHorizonDialogueMsgTextBlock::OnHorizonHypertextEvent__DelegateSignature(const struct FHorizonDialogueHypertextResult& InResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "OnHorizonHypertextEvent__DelegateSignature");

	Params::HorizonDialogueMsgTextBlock_OnHorizonHypertextEvent__DelegateSignature Parms{};

	Parms.InResult = std::move(InResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.PauseDialogue
// (Native, Public, BlueprintCallable)

void UHorizonDialogueMsgTextBlock::PauseDialogue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "PauseDialogue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.RequestRebuildDialogue
// (Native, Public, BlueprintCallable)

void UHorizonDialogueMsgTextBlock::RequestRebuildDialogue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "RequestRebuildDialogue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.ResumeDialogue
// (Native, Public, BlueprintCallable)

void UHorizonDialogueMsgTextBlock::ResumeDialogue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "ResumeDialogue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.SetAutoNextDialogueMsgPageIntervalRate
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   InAutoNextDialogueMsgPageIntervalRate                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHorizonDialogueMsgTextBlock::SetAutoNextDialogueMsgPageIntervalRate(float InAutoNextDialogueMsgPageIntervalRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "SetAutoNextDialogueMsgPageIntervalRate");

	Params::HorizonDialogueMsgTextBlock_SetAutoNextDialogueMsgPageIntervalRate Parms{};

	Parms.InAutoNextDialogueMsgPageIntervalRate = InAutoNextDialogueMsgPageIntervalRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.SetColorAndOpacity
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSlateColor                      InColorAndOpacity                                      (Parm, NativeAccessSpecifierPublic)

void UHorizonDialogueMsgTextBlock::SetColorAndOpacity(const struct FSlateColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "SetColorAndOpacity");

	Params::HorizonDialogueMsgTextBlock_SetColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.SetDialogueMsgPage
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPageIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHorizonDialogueMsgTextBlock::SetDialogueMsgPage(int32 InPageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "SetDialogueMsgPage");

	Params::HorizonDialogueMsgTextBlock_SetDialogueMsgPage Parms{};

	Parms.InPageIndex = InPageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.SetFont
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSlateFontInfo                   InFontInfo                                             (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHorizonDialogueMsgTextBlock::SetFont(const struct FSlateFontInfo& InFontInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "SetFont");

	Params::HorizonDialogueMsgTextBlock_SetFont Parms{};

	Parms.InFontInfo = std::move(InFontInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.SetFontSize
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   FontSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHorizonDialogueMsgTextBlock::SetFontSize(int32 FontSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "SetFontSize");

	Params::HorizonDialogueMsgTextBlock_SetFontSize Parms{};

	Parms.FontSize = FontSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.SetIsAutoNextDialogueMsgPage
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    B                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHorizonDialogueMsgTextBlock::SetIsAutoNextDialogueMsgPage(bool B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "SetIsAutoNextDialogueMsgPage");

	Params::HorizonDialogueMsgTextBlock_SetIsAutoNextDialogueMsgPage Parms{};

	Parms.B = B;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.SetIsDialogueMsgText
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    B                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHorizonDialogueMsgTextBlock::SetIsDialogueMsgText(bool B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "SetIsDialogueMsgText");

	Params::HorizonDialogueMsgTextBlock_SetIsDialogueMsgText Parms{};

	Parms.B = B;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.SetIsRepeatDialogueMsg
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    B                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHorizonDialogueMsgTextBlock::SetIsRepeatDialogueMsg(bool B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "SetIsRepeatDialogueMsg");

	Params::HorizonDialogueMsgTextBlock_SetIsRepeatDialogueMsg Parms{};

	Parms.B = B;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.SetIsStartTickDialogueMsg
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    B                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHorizonDialogueMsgTextBlock::SetIsStartTickDialogueMsg(bool B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "SetIsStartTickDialogueMsg");

	Params::HorizonDialogueMsgTextBlock_SetIsStartTickDialogueMsg Parms{};

	Parms.B = B;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.SetJustification
// (Native, Public, BlueprintCallable)
// Parameters:
// ETextJustify                            InJustification                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHorizonDialogueMsgTextBlock::SetJustification(ETextJustify InJustification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "SetJustification");

	Params::HorizonDialogueMsgTextBlock_SetJustification Parms{};

	Parms.InJustification = InJustification;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.SetOpacity
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   InOpacity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHorizonDialogueMsgTextBlock::SetOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "SetOpacity");

	Params::HorizonDialogueMsgTextBlock_SetOpacity Parms{};

	Parms.InOpacity = InOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.SetShadowColorAndOpacity
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InShadowColorAndOpacity                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHorizonDialogueMsgTextBlock::SetShadowColorAndOpacity(const struct FLinearColor& InShadowColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "SetShadowColorAndOpacity");

	Params::HorizonDialogueMsgTextBlock_SetShadowColorAndOpacity Parms{};

	Parms.InShadowColorAndOpacity = std::move(InShadowColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.SetShadowOffset
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        InShadowOffset                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHorizonDialogueMsgTextBlock::SetShadowOffset(const struct FVector2D& InShadowOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "SetShadowOffset");

	Params::HorizonDialogueMsgTextBlock_SetShadowOffset Parms{};

	Parms.InShadowOffset = std::move(InShadowOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.SetTextAndRebuildDialogue
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHorizonDialogueMsgTextBlock::SetTextAndRebuildDialogue(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "SetTextAndRebuildDialogue");

	Params::HorizonDialogueMsgTextBlock_SetTextAndRebuildDialogue Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.SkipCurrentDialogueMsgPageTick
// (Native, Public, BlueprintCallable)

void UHorizonDialogueMsgTextBlock::SkipCurrentDialogueMsgPageTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "SkipCurrentDialogueMsgPageTick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.SkipCurrentDialoguePage
// (Native, Public, BlueprintCallable)

void UHorizonDialogueMsgTextBlock::SkipCurrentDialoguePage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "SkipCurrentDialoguePage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.SkipDialogue
// (Native, Public, BlueprintCallable)

void UHorizonDialogueMsgTextBlock::SkipDialogue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "SkipDialogue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.StartDialogue
// (Native, Public, BlueprintCallable)

void UHorizonDialogueMsgTextBlock::StartDialogue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "StartDialogue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.StopDialogue
// (Native, Public, BlueprintCallable)

void UHorizonDialogueMsgTextBlock::StopDialogue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "StopDialogue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.GetJustification
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETextJustify                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETextJustify UHorizonDialogueMsgTextBlock::GetJustification() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "GetJustification");

	Params::HorizonDialogueMsgTextBlock_GetJustification Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonDialogueMsgTextBlock.GetText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UHorizonDialogueMsgTextBlock::GetText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonDialogueMsgTextBlock", "GetText");

	Params::HorizonDialogueMsgTextBlock_GetText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonRadioButtonUserWidget.NativeOnCheckStateChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHorizonRadioButtonUserWidget::NativeOnCheckStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonRadioButtonUserWidget", "NativeOnCheckStateChanged");

	Params::HorizonRadioButtonUserWidget_NativeOnCheckStateChanged Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction HorizonUI.HorizonRadioButtonUserWidget.OnHorizonRadioButtonEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UHorizonRadioButtonUserWidget::OnHorizonRadioButtonEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonRadioButtonUserWidget", "OnHorizonRadioButtonEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HorizonUI.HorizonRadioButtonUserWidget.SetChecked
// (Native, Public, BlueprintCallable)

void UHorizonRadioButtonUserWidget::SetChecked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonRadioButtonUserWidget", "SetChecked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function HorizonUI.HorizonTextBlock.GetJustification
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETextJustify                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETextJustify UHorizonTextBlock::GetJustification() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HorizonTextBlock", "GetJustification");

	Params::HorizonTextBlock_GetJustification Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonWidgetFunctionLibrary.GetInputMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                InPC                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHorizonUIInputMode                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHorizonUIInputMode UHorizonWidgetFunctionLibrary::GetInputMode(const class APlayerController* InPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HorizonWidgetFunctionLibrary", "GetInputMode");

	Params::HorizonWidgetFunctionLibrary_GetInputMode Parms{};

	Parms.InPC = InPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonWidgetFunctionLibrary.GetParentCanvasPanelSlot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          PWidget                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCanvasPanelSlot*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCanvasPanelSlot* UHorizonWidgetFunctionLibrary::GetParentCanvasPanelSlot(class UWidget* PWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HorizonWidgetFunctionLibrary", "GetParentCanvasPanelSlot");

	Params::HorizonWidgetFunctionLibrary_GetParentCanvasPanelSlot Parms{};

	Parms.PWidget = PWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonWidgetFunctionLibrary.GetUserIndex
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHorizonWidgetFunctionLibrary::GetUserIndex(class UWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HorizonWidgetFunctionLibrary", "GetUserIndex");

	Params::HorizonWidgetFunctionLibrary_GetUserIndex Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonWidgetFunctionLibrary.GetUserWidgetAnimation
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UUserWidget*                      PUserWidget                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             AnimeName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidgetAnimation*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidgetAnimation* UHorizonWidgetFunctionLibrary::GetUserWidgetAnimation(class UUserWidget* PUserWidget, const class FName& AnimeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HorizonWidgetFunctionLibrary", "GetUserWidgetAnimation");

	Params::HorizonWidgetFunctionLibrary_GetUserWidgetAnimation Parms{};

	Parms.PUserWidget = PUserWidget;
	Parms.AnimeName = AnimeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonWidgetFunctionLibrary.GetWidgetFromNameRecursively
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UUserWidget*                      PUserWidget                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InWidgetName                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UHorizonWidgetFunctionLibrary::GetWidgetFromNameRecursively(class UUserWidget* PUserWidget, const class FName& InWidgetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HorizonWidgetFunctionLibrary", "GetWidgetFromNameRecursively");

	Params::HorizonWidgetFunctionLibrary_GetWidgetFromNameRecursively Parms{};

	Parms.PUserWidget = PUserWidget;
	Parms.InWidgetName = InWidgetName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function HorizonUI.HorizonWidgetFunctionLibrary.SetWidgetVisibility
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      UserWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             WidgetName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESlateVisibility                        EVisiblity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UHorizonWidgetFunctionLibrary::SetWidgetVisibility(class UUserWidget* UserWidget, class FName WidgetName, ESlateVisibility EVisiblity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HorizonWidgetFunctionLibrary", "SetWidgetVisibility");

	Params::HorizonWidgetFunctionLibrary_SetWidgetVisibility Parms{};

	Parms.UserWidget = UserWidget;
	Parms.WidgetName = WidgetName;
	Parms.EVisiblity = EVisiblity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

